# Build stage
FROM node:21.7.2 AS build

WORKDIR /frontend

# Copy the source files into the image
COPY . .

# Define build-time arguments
ARG NPM_REGISTRY_SERVER
ARG CUSTOM_CA_FILE

# Debug
RUN echo "NPM_REGISTRY_SERVER is $NPM_REGISTRY_SERVER"
RUN echo "CUSTOM_CA_FILE is $CUSTOM_CA_FILE"

# Set custom Yarn registry if NPM_REGISTRY_SERVER is defined
RUN if [ -n "$NPM_REGISTRY_SERVER" ]; then \
        yarn config set registry "$NPM_REGISTRY_SERVER" --global; \
        npm config set registry "$NPM_REGISTRY_SERVER" --global; \
    fi

# Copy the CA certificate into the image and set configurations if CUSTOM_CA_FILE is defined
RUN if [ -n "$CUSTOM_CA_FILE" ]; then \
        # Import cert file
        cp ${CUSTOM_CA_FILE} "/usr/local/share/ca-certificates/${CUSTOM_CA_FILE}"; \
        update-ca-certificates; \

        # Apply the cert file
        yarn config set cafile "/usr/local/share/ca-certificates/${CUSTOM_CA_FILE}"; \
        npm config set cafile "/usr/local/share/ca-certificates/${CUSTOM_CA_FILE}"; \
        export NODE_EXTRA_CA_CERTS="/usr/local/share/ca-certificates/${CUSTOM_CA_FILE}"; \
    fi

# Display Yarn configuration for debugging
RUN yarn config list

# Install dependencies and build
RUN yarn install --non-interactive
RUN yarn build

# Production stage
FROM nginx:alpine

# Copy the build files to Nginx
COPY --from=build /frontend/dist /usr/share/nginx/html

# Copy custom Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]